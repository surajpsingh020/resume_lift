# Production Docker Compose
# Includes: Frontend (Nginx), Backend, MongoDB
# Production Docker Compose

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ai-resume-builder-db-prod
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ai-resume-builder
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/ai-resume-builder --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: ai-resume-builder-backend-prod
    restart: unless-stopped
    ports:
      - "5001:5001"
    env_file:
      - ./Backend/.env
    environment:
      - NODE_ENV=production
      # Comment out to use MongoDB Atlas from .env file instead of local MongoDB
      # - MONGODB_URI=mongodb://mongodb:27017/ai-resume-builder
      - PORT=5001
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (React + Nginx)
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      args:
        - VITE_APP_URL=http://localhost:5001/
    container_name: ai-resume-builder-frontend-prod
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - VITE_APP_URL=http://localhost:5001/
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  app-network:
    driver: bridge
